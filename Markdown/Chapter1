# This is a new learning!
# new try!

# String 类
- 在Java中，String类是一个内置类，用于表示字符串。它是不可变（immutable）的，意味着一旦创建，就不能修改其内容。每当对字符串进行操作时，都会创建一个新的字符串对象。
- 字符串比较：可以使用equals()方法或compareTo()方法来比较字符串是否相等。一定不要使用 == 运算符检测两个字符串是否相等！这个运算符只能够确定两个字串是否放置在同一个位置上
- 当创建一个String对象时，它会被存储在Java堆（Heap）中的对象区域。下面是一些关于String对象在内存中的特点：
  - 字符串池（String Pool）：Java中有一个字符串池的概念，用于存储字符串常量。当创建一个字符串对象时，如果字符串池中已经存在相同内容的字符串，则会返回池中的对象，而不会创建新的对象。这样可以节省内存，并提高字符串比较的效率。
  - 不可变性：String对象是不可变的，即一旦创建了一个字符串对象，它的值就不能被修改。当对字符串进行操作时，实际上是创建了一个新的字符串对象，而原来的对象保持不变。这种不可变性使得字符串可以安全地被共享和在多线程环境下使用。
  - 拼接操作：当使用字符串拼接操作符 + 连接两个字符串时，实际上会创建一个新的字符串对象，将原来的字符串和新的字符串连接起来。这是因为字符串的不可变性，无法直接修改原有字符串的内容。
  - StringBuilder和StringBuffer：当需要频繁进行字符串拼接或修改时，可以使用StringBuilder（非线程安全）或StringBuffer（线程安全）类。它们是可变的字符串序列，允许在现有字符串上进行修改而不会创建新的对象，从而提高效率。
    - `append()` 方法 进行拼接。
    - `toString()` 方法转化为字符串。
- 文件的相对位置是位于 Java 虚拟机启动路径的相对位置。如果在命令行方式下用下列命令启动程序：
  `java MyProg`
  启动路径就是命令解释器的当前路後。然而，如果使用集成开发环境，那么启动路径将由IDE控制。